{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#The function picks a number between 0 and 200. Then you should input different values\n",
    "#until you guess the hidden number correctly.\n",
    "print('Hi! let\\'s play')\n",
    "print( 'I am thinking of a number between 1 and 200 and you should guess my number \\nReady?')\n",
    "import random\n",
    "num1 =(random.randint(1,201))\n",
    "while True:\n",
    "    print('Take a guess')\n",
    "    num2 = int(input() )\n",
    "    if num2 > 200 or num2 <1:\n",
    "        print (\"Number must be between 1 and 200\")\n",
    "    print(num1)\n",
    "    num1= int(num1)\n",
    "    if num1 == num2:\n",
    "        print('Bingo')\n",
    "        break\n",
    "    elif (1< num1 - num2<10 or 1< num2- num1 <10):\n",
    "        print('you are close to my number')    \n",
    "    elif 10<= num1 - num2 <50:\n",
    "        print('your guess is lower than my number')\n",
    "    elif 10< num2 - num1< 50:\n",
    "        print('your guess is upper than my number')    \n",
    "    elif 50< num2 - num1< 200  :\n",
    "        print('your guess is too upper than my number')\n",
    "    elif 50 < num1- num2<200:\n",
    "        print('your guess is too lower than my number')\n",
    "print (\"congratulations, The computer number was \", num2, \"and your guess was correct!\")        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Now do the reverse and you guide the program to get close to (and eventually guess) your number in mind.\n",
    "#APPROACH 1,USING RANDOM MODULE \n",
    "number = int(input(\"\\n\\nEnter a number for the computer to guess: \"))\n",
    "import random\n",
    "guess = int(random.randint(1, 200))# make a random number\n",
    "print (\"The computer takes a guess...\", guess)\n",
    "while guess != number:\n",
    "    if guess > number:#guide the computer\n",
    "        print(guess, \"choose a lower number... Mr. Computer\")\n",
    "    else:\n",
    "        print(guess, \"choose a higher number... Mr. Computer\")           \n",
    "              \n",
    "    guess = int(random.randint(0,200))   \n",
    "print(\"The computer guessed\", guess, \"and it was correct!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Now do the reverse and you guide the program to get close to (and eventually guess) your number in mind.\n",
    "#APPROACH 1, USING MIDPOINT\n",
    "print (\"In this program you will enter a number between 1 - 200.\"\n",
    "       \"\\n and then the computer will try to guess your number!\")\n",
    "num = int(input(\"\\n\\nEnter a number for the computer to guess: \"))\n",
    "if num < 1 or num > 200:\n",
    "    print('The number must be between 1, 200')\n",
    "low = 1\n",
    "high = 200\n",
    "guess = 100\n",
    "while guess != num:\n",
    "        guess = (round)(low+high) / 2\n",
    "        print(\"\\n\\nThe computer takes a guess...\", guess)\n",
    "        if guess > num:\n",
    "            print(guess, \"choose a lower number... Mr. Computer\")\n",
    "            high = guess\n",
    "        elif guess < num:\n",
    "            print(guess, \"choose a higher number... Mr. Computer\")\n",
    "            low = guess + 1\n",
    "\n",
    "print(\"The computer guessed\", guess, \"and it was correct!\")\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Now do the reverse and you guide the program to get close to (and eventually guess) your number in mind. \n",
    "#APPROACH 2\n",
    "low =0\n",
    "high=200\n",
    "guessesTaken = 0\n",
    "print('Dear user! choose a number between 1 and 198 in your mind. Then answer me with pressing appropriate number...')\n",
    "while low<high:\n",
    "    guess =round((low+high)/2)#Find the midpoint as a guess\n",
    "    print(' Is the number in your mind ', guess,'?')# check if guess is the right number or not?\n",
    "    guessesTaken +=1\n",
    "    #guide the computer to find the number\n",
    "    print('  If the computer guesses correctly press 1.\\n   If your number is lower press 2,\\n    If your number is higher press 3')\n",
    "    pressResult = int(input())      \n",
    "    if pressResult ==2:# if guess is low\n",
    "        high = guess + 1\n",
    "    elif pressResult == 3:#if guess is high\n",
    "        low = guess - 1\n",
    "    else:\n",
    "        break\n",
    "print('I win, your number was ',guess ,'and you succeed after', guessesTaken, 'attempts')    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Now improve your code by limiting the guesses and let the function to guide you after the second guess\n",
    "#that as long as the reply is not way up/low. \n",
    "def guide_1(num1):#function which limit the guess\n",
    "    if num1 % 2 == 0:\n",
    "        print('Hint, the number is even.\\n now wisely try one more time')\n",
    "    elif num1 % 2 != 0: \n",
    "        print('Hint, the number is odd.\\n now wisely try one more time')\n",
    "    if num1 % 3 == 0:\n",
    "         print('Moreover, it\\'s devisible by 3.')\n",
    "    else:\n",
    "        print('Moreover, it\\'s not devisible by 3.')\n",
    "print('Hi! let\\'s play')\n",
    "print( 'I am thinking of a number between 1 and 200 and you should guess my number \\nReady?')\n",
    "import random\n",
    "num1 =(random.randint(1,200))\n",
    "guessesTaken = 0\n",
    "attempt = 0 \n",
    "while num1!= num2:\n",
    "    print('Take a guess')\n",
    "    num2 = int(input() )\n",
    "    attempt +=1\n",
    "    if num2 > 200 or num2 <1:#user num is out of range\n",
    "        print (\"Number must be between 1 and 200\")\n",
    "        \n",
    "    num1= int(num1)\n",
    "    if num1 == num2:#user guess correctly\n",
    "        print('Bingo. you became successful after', attempt ,'attempts') \n",
    "        break\n",
    "    elif (1< num1 - num2 <10 or 1< num2- num1 <10):# difference of two number is |10|,so it is close\n",
    "        print('you are close to my number')\n",
    "        guessesTaken += 1\n",
    "    elif 10<= num1 - num2 <50:#  number is low, and so on...\n",
    "        print('your guess is lower than my number')\n",
    "        guessesTaken += 1\n",
    "    elif 10< num2 - num1< 50:\n",
    "        print('your guess is upper than my number') \n",
    "        guessesTaken += 1\n",
    "    elif 50< num2 - num1< 200  :\n",
    "        print('your guess is way upper than my number')\n",
    "        guessesTaken += 1\n",
    "    elif 50 < num1- num2<200:\n",
    "        print('your guess is way lower than my number')\n",
    "    if (guessesTaken > 2 ):\n",
    "        guide_1(num1)\n",
    "         "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Again do reverse and make the communication more interesting.\n",
    "high=200\n",
    "low = 0\n",
    "guess = round((low+high)/ 2)\n",
    "\n",
    "numbers = input('Please think of a number between0 and 200!    ')\n",
    "while True:\n",
    "\n",
    "    print('Is your secret number', guess )\n",
    "    response =input(\"Enter 'h' to indicate the guess is too high. \"\n",
    "                        \"\\n Enter 'l' to indicate the guess is too low. \"\n",
    "                        \"\\n Enter 'c' to indicate I guessed correctly.\").lower() #no sensitive case answer\n",
    "    if response == 'h' :\n",
    "        high = guess-1\n",
    "    elif response == 'l' :\n",
    "        low = guess+1\n",
    "    elif (response == 'c') and (str(numbers) ==  str(guess)) :       \n",
    "            print('Your secret number was' ,guess)\n",
    "            break\n",
    "    else:\n",
    "        print('Sorry, I did not understand your input.')\n",
    "    guess = (low + high) / 2\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
